# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
pr: none

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
#    - task: DownloadSecureFile@1
#      displayName: 'download settings.xml for Maven'
#      name: settingsxml
#      inputs:
#        secureFile: 'settings_v2.xml'
#        retryCount: '2'
    - task: MavenAuthenticate@0
      displayName: 'Maven Authenticate'
      inputs:
        artifactsFeeds: sia-dds
    - task: Maven@3
      displayName: Build and Deploy Artifacts
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'deploy'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: true
        sonarQubeRunAnalysis: false
    - task: Bash@3
      displayName: Get POM version
      name: getpomversion
      inputs:
        targetType: 'inline'
        script: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -s $(settingsxml.secureFilePath))
          echo "##vso[task.setvariable variable=outputpomversion]$version"
          echo "Current Project Version ${version}"
        failOnStderr: true
    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'githubTag'
        action: 'create'
        tagSource: 'userSpecifiedTag'
        tag: $(outputpomversion)-$(Build.BuildNumber)
